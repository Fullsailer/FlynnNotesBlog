@using Microsoft.AspNetCore.Identity
@using FlynnNotesBlog.Services
@using Newtonsoft.Json
@using FlynnNotesBlog.Enums

@model FlynnNotesBlog.Models.Post

@inject UserManager<BlogUser> userManager
@inject IImageService imageService

@{
    ViewData["Title"] = "Details";
}

<!-- Post Content-->
<article class="mb-4">
    <div class="container px-4 px-lg-5">
        <div class="row gx-4 gx-lg-5 justify-content-center">
            <div class="col-md-10 col-lg-8 col-xl-7">
                @Html.Raw(Model.Content)
            </div>
        </div>
    </div>
</article>


<hr />

<article>
    <div class="row">
        <div class="col text-center font-weight-bold h3">
            Custom Post Tags
        </div>
    </div>
    <div class="row">
        <div class="col text-center">
            @foreach (var tag in Model.Tags)
            {
                <a class="btn btn-warning btn-sm btn-outline-dark" asp-action="TagIndex" asp-route-tag="@tag.Text.ToLower()">#@tag.Text</a>
            }
        </div>
    </div>
</article>

<hr />




<div>
    @if (User.Identity.IsAuthenticated)
    {
        <form asp-action="Create" asp-controller="Comments" method="post">
            @Html.Hidden("PostId", Model.Id)


            <div class="from-group">
                <label class="h2 custom-control-label font-weight-bold">Add Comment</label>
                <textarea name="body" class="form-control" rows="10"></textarea>
            </div>

            <button type="submit" class="btn btn-dark btn-block btn-sm">Submit</button>
        </form>
    }
    else
    {
        <a class="btn btn-block btn-sm btn-dark" asp-area="Identity" asp-page="/Account/Login">
            Login to add comments
        </a>
    }

</div>

<!-- Display the image of the Commet's Author -->

<hr />

<button id="commentSection" class="btn btn-sm btn-dark btn-block">@Model.Comments.Count COMMENTS(S)</button>

<!-- Displaying Comments related to this Post -->

@{ var counter = 0;}
@foreach (var comment in Model.Comments)
{
    <div class="media media-border p-0 mb-2 bg-light">
        <img class="mr-3 mt-3 rounded-circle" style="width:60px;" src="@imageService.DecodeImage(comment.Author.Image, comment.Author.ContentType)" />
        <div class="media-body">
            <h4>@comment.Author.FullName</h4>
            <small>
                <i>
                    @if (comment.Moderated is not null)
                    {
                        <span class="small">
                            <span class="font-weight-bolder">
                                Moderated <span class="text-danger font-italic">(@comment.ModerationType.ToString().ToLower())</span>
                            </span>
                            : @comment.Created.ToString("MMM dd, yyyy")
                        </span>
                    }
                    else
                    {
                        <span class="small font-italic">Posted : @comment.Created.ToString("MMM dd, yyyy")</span>
                    }
                 </i>
             </small>
                
            
            @* Review this later in Comments Moderating Part 4?
                @if (string.IsNullOrEmpty(comment.Body))
            else if (comment.Moderated is not null)
                    { 
                        <p>@comment.ModeratedBody</p>
                    }
            else if (comment.Deleted is null)*@
            

            @************************************
                Section 1: RENDER THE EDIT BUTTON
                ***********************************@

            @if (comment.Moderated is null && comment.Deleted is null && comment.AuthorId == userManager.GetUserId(User))
            {
                <hr />
                <button data-toggle="modal" data-target="@($"#editModal{counter}")" class="btn-sm btn-dark note-float-right font-weight-bold">EDIT</button>
            }

            @***************************************************
                SECTION 2: RENDER THE MODERATE AND DELTE BUTTONS
                *************************************************@

            @if (User.IsInRole(BlogRole.Moderator.ToString()) && comment.Deleted is null)
                {
                    <hr>
                    <div class="row">
                        <div class="col-2">
                            <button class="btn-sm btn-dark font-weight-bold btn-block" data-toggle="modal" data-target="@($"#moderateModal{counter}")">MODERATE</button>
                        </div>
                        <div class="col-2">
                            <form asp-action="Delete" asp-controller="Comments">
                                @Html.Hidden("Id", comment.Id)
                                @Html.Hidden("Slug", comment.Post.Slug)
                                <button class="btn-sm btn-dark font-weight-bold btn-block">DELETE</button>
                            </form>
                        </div>
                    </div>

                }
        </div>
    </div>

    @*Modals*@
    <div class="modal" id="@($"moderateModal{counter}")">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">Editing Comment...</h4>
                </div>

                <!-- Modal Body-->
                <div class="modal-body">
                    <form asp-action="Edit" asp-controller="Comments">
                        @Html.Hidden("Id", comment.Id)

                        <div class="form-group">
                            <textarea name="Body" class="form-control" required>@comment.Body</textarea>
                        </div>

                        <button class="btn-sm btn-dark border-success font-weight-bold" type="submit">SUBMIT</button>
                    </form>
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer">
                    <button type="button" class="btn-sm btn-dark font-weight-bold" data-dismiss="modal">CLOSE</button>
                </div>
            </div>
        </div>
    </div>
    counter++;
}
